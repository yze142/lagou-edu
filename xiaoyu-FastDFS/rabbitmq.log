2022-03-31 10:51:36 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 10:51:36 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 10:51:36 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1442045361 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@146611050 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 10:51:36 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:589)  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 10:51:36 CST 2022]; root of context hierarchy
2022-03-31 10:51:36 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 10:51:36 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 10:51:36 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1518864111 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@1816757085 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 10:51:36 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:316)  Loading XML bean definitions from class path resource [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 10:51:36 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:74)  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2022-03-31 10:51:37 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)  Loading schema mappings from [META-INF/spring.schemas]
2022-03-31 10:51:37 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:153)  Loaded schema mappings: {http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd}
2022-03-31 10:51:37 org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:123)  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans.xsd
2022-03-31 10:51:38 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)  Loading bean definitions
2022-03-31 10:51:38 org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:163)  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler}
2022-03-31 10:51:38 org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:230)  Loaded 8 bean definitions from location pattern [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 10:51:38 org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:623)  Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 10:51:38 org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:740)  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7ec7ffd3]
2022-03-31 10:51:38 org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:764)  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16293aa2]
2022-03-31 10:51:38 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730)  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 10:51:38 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'connectionFactory'
2022-03-31 10:51:38 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'connectionFactory'
2022-03-31 10:51:38 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.getDefaultHostName(AbstractConnectionFactory.java:422)  Using hostname [WIN-N7GK09PTU6C] for hostname.
2022-03-31 10:51:38 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'connectionFactory' to allow for resolving potential circular references
2022-03-31 10:51:38 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'connectionFactory'
2022-03-31 10:51:38 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'connectionFactory'
2022-03-31 10:51:38 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 10:51:38 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 10:51:38 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.Queue#0' to allow for resolving potential circular references
2022-03-31 10:51:38 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 10:51:38 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 10:51:38 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 10:51:38 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 10:51:38 org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:503)  No property editor [org.springframework.amqp.rabbit.core.RabbitTemplateEditor] found for type org.springframework.amqp.rabbit.core.RabbitTemplate according to 'Editor' suffix convention
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0' to allow for resolving potential circular references
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 10:51:39 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0' to allow for resolving potential circular references
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 10:51:39 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.TopicExchange#0' to allow for resolving potential circular references
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 10:51:39 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'jsonMessageConverter'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'jsonMessageConverter'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'jsonMessageConverter' to allow for resolving potential circular references
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'jsonMessageConverter'
2022-03-31 10:51:39 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'rabbitTemplate'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'rabbitTemplate'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'rabbitTemplate' to allow for resolving potential circular references
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'jsonMessageConverter'
2022-03-31 10:51:39 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'messageConfirm'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'messageConfirm'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'messageConfirm' to allow for resolving potential circular references
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'messageConfirm'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'rabbitTemplate'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'rabbitTemplate'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'messageConfirm'
2022-03-31 10:51:39 org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:791)  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@302f7971]
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 10:51:39 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:96)  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 10:51:39 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:392)  Attempting to connect to: 192.168.58.133:5672
2022-03-31 10:51:39 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:400)  Created new connection: connectionFactory#74455848:0/SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 4519]
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:426)  Initializing declarations
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 10:51:39 org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:486)  Creating cached Rabbit Channel from PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 10:51:39 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@6f3c660a
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 4519] to map, size now 1
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitAdmin$$Lambda$92/0x0000000801326040 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 4519]
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitAdmin.declareExchanges(RabbitAdmin.java:507)  declaring Exchange 'spring_topic_exchange'
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitAdmin.declareQueues(RabbitAdmin.java:542)  declaring Queue 'test_spring_queue_1'
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitAdmin.declareBindings(RabbitAdmin.java:578)  Binding destination [test_spring_queue_1 (QUEUE)] to exchange [spring_topic_exchange] with routing key [msg.#]
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:484)  Declarations finished
2022-03-31 10:51:39 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@4c51cf28
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 4519] to map, size now 1
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 4519]
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [hhh], routingKey = [msg.xiaoyu]
2022-03-31 10:51:39 org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:989)  Closing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 10:51:36 CST 2022]; root of context hierarchy
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 10:51:39 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 10:51:39 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):1
2022-03-31 10:51:39 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=channel error; protocol method: #method<channel.close>(reply-code=404, reply-text=NOT_FOUND - no exchange 'hhh' in vhost '/', class-id=60, method-id=40)]
2022-03-31 10:51:39 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 10:51:39 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 10:51:39 org.springframework.amqp.rabbit.connection.CachingConnectionFactory$DefaultChannelCloseLogger.log(CachingConnectionFactory.java:1215)  Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=404, reply-text=NOT_FOUND - no exchange 'hhh' in vhost '/', class-id=60, method-id=40)
2022-03-31 10:51:39 org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:368)  Stopping beans in phase 0
2022-03-31 10:51:39 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:510)  Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 10:51:39 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:566)  Retrieved dependent beans for bean 'connectionFactory': [org.springframework.amqp.rabbit.core.RabbitAdmin#0, rabbitTemplate]
2022-03-31 10:51:39 org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:246)  Invoking destroy() on bean with name 'connectionFactory'
2022-03-31 10:51:39 org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CachedChannelInvocationHandler.physicalClose(CachingConnectionFactory.java:1006)  Closing cached Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 10:51:39 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:19:28 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:19:28 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:19:28 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1442045361 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@146611050 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:19:28 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:589)  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:19:28 CST 2022]; root of context hierarchy
2022-03-31 14:19:28 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:19:28 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:19:28 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1518864111 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@1816757085 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:19:28 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:316)  Loading XML bean definitions from class path resource [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:19:28 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:74)  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2022-03-31 14:19:28 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)  Loading schema mappings from [META-INF/spring.schemas]
2022-03-31 14:19:28 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:153)  Loaded schema mappings: {http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd}
2022-03-31 14:19:28 org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:123)  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans.xsd
2022-03-31 14:19:29 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)  Loading bean definitions
2022-03-31 14:19:29 org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:163)  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler}
2022-03-31 14:19:29 org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:230)  Loaded 8 bean definitions from location pattern [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:19:29 org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:623)  Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:19:29 org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:740)  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7ec7ffd3]
2022-03-31 14:19:29 org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:764)  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16293aa2]
2022-03-31 14:19:29 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730)  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:19:29 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'connectionFactory'
2022-03-31 14:19:29 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'connectionFactory'
2022-03-31 14:19:29 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.getDefaultHostName(AbstractConnectionFactory.java:422)  Using hostname [WIN-N7GK09PTU6C] for hostname.
2022-03-31 14:19:29 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'connectionFactory' to allow for resolving potential circular references
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'connectionFactory'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'connectionFactory'
2022-03-31 14:19:30 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.Queue#0' to allow for resolving potential circular references
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:19:30 org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:503)  No property editor [org.springframework.amqp.rabbit.core.RabbitTemplateEditor] found for type org.springframework.amqp.rabbit.core.RabbitTemplate according to 'Editor' suffix convention
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0' to allow for resolving potential circular references
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0' to allow for resolving potential circular references
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.TopicExchange#0' to allow for resolving potential circular references
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'jsonMessageConverter'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'jsonMessageConverter' to allow for resolving potential circular references
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'jsonMessageConverter'
2022-03-31 14:19:30 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'rabbitTemplate'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'rabbitTemplate'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'rabbitTemplate' to allow for resolving potential circular references
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:19:30 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'messageConfirm'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'messageConfirm'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'messageConfirm' to allow for resolving potential circular references
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'messageConfirm'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'rabbitTemplate'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'rabbitTemplate'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'messageConfirm'
2022-03-31 14:19:30 org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:791)  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@302f7971]
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:19:30 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:96)  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:19:30 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:392)  Attempting to connect to: 192.168.58.133:5672
2022-03-31 14:19:30 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:400)  Created new connection: connectionFactory#74455848:0/SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:426)  Initializing declarations
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:19:30 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:19:30 org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:486)  Creating cached Rabbit Channel from PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:19:30 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@6f3c660a
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734] to map, size now 1
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitAdmin$$Lambda$92/0x0000000801326040 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitAdmin.declareExchanges(RabbitAdmin.java:507)  declaring Exchange 'spring_topic_exchange'
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitAdmin.declareQueues(RabbitAdmin.java:542)  declaring Queue 'test_spring_queue_1'
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitAdmin.declareBindings(RabbitAdmin.java:578)  Binding destination [test_spring_queue_1 (QUEUE)] to exchange [spring_topic_exchange] with routing key [msg.#]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:484)  Declarations finished
2022-03-31 14:19:30 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@4c51cf28
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734] to map, size now 1
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:1:false
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:30 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10734]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:19:31 org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:989)  Closing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:19:28 CST 2022]; root of context hierarchy
2022-03-31 14:19:31 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:19:31 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:19:31 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:19:31 org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:368)  Stopping beans in phase 0
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:2:false
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:19:31 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:510)  Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:19:31 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:566)  Retrieved dependent beans for bean 'connectionFactory': [org.springframework.amqp.rabbit.core.RabbitAdmin#0, rabbitTemplate]
2022-03-31 14:19:31 org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:246)  Invoking destroy() on bean with name 'connectionFactory'
2022-03-31 14:19:31 org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CachedChannelInvocationHandler.physicalClose(CachingConnectionFactory.java:1006)  Closing cached Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):3
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):4
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):5
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):6
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):7
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):8
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):9
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):10
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):11
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):12
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):13
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):14
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):15
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):16
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):17
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):18
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):19
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):20
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):21
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):22
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):23
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):24
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):25
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):26
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):27
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):28
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):29
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):30
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):31
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):32
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):33
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):34
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):35
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):36
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):37
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):38
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):39
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):40
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):41
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):42
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):43
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):44
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):45
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):46
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):47
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):48
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):49
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):50
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):51
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):52
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):53
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):54
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):55
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):56
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):57
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):58
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):59
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):60
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):61
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):62
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):63
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):64
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):65
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):66
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):67
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):68
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):69
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):70
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):71
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):72
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):73
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):74
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):75
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):76
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):77
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):78
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):79
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):80
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):81
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):82
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):83
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):84
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):85
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):86
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):87
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):88
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):89
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):90
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):91
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):92
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):93
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):94
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):95
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):96
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):97
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):98
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):99
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:19:31 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:19:31 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:21:25 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:21:25 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:21:25 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1442045361 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@146611050 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:21:25 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:589)  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:21:25 CST 2022]; root of context hierarchy
2022-03-31 14:21:25 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:21:25 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:21:25 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1518864111 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@1816757085 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:21:25 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:316)  Loading XML bean definitions from class path resource [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:21:25 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:74)  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2022-03-31 14:21:25 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)  Loading schema mappings from [META-INF/spring.schemas]
2022-03-31 14:21:25 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:153)  Loaded schema mappings: {http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd}
2022-03-31 14:21:25 org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:123)  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans.xsd
2022-03-31 14:21:25 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)  Loading bean definitions
2022-03-31 14:21:26 org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:163)  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler}
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:230)  Loaded 8 bean definitions from location pattern [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:21:26 org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:623)  Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:21:26 org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:740)  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7ec7ffd3]
2022-03-31 14:21:26 org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:764)  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16293aa2]
2022-03-31 14:21:26 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730)  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:21:26 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'connectionFactory'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'connectionFactory'
2022-03-31 14:21:26 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.getDefaultHostName(AbstractConnectionFactory.java:422)  Using hostname [WIN-N7GK09PTU6C] for hostname.
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'connectionFactory' to allow for resolving potential circular references
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'connectionFactory'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'connectionFactory'
2022-03-31 14:21:26 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.Queue#0' to allow for resolving potential circular references
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:21:26 org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:503)  No property editor [org.springframework.amqp.rabbit.core.RabbitTemplateEditor] found for type org.springframework.amqp.rabbit.core.RabbitTemplate according to 'Editor' suffix convention
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0' to allow for resolving potential circular references
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0' to allow for resolving potential circular references
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.TopicExchange#0' to allow for resolving potential circular references
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:21:26 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:21:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'jsonMessageConverter'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'jsonMessageConverter' to allow for resolving potential circular references
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'jsonMessageConverter'
2022-03-31 14:21:27 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'rabbitTemplate'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'rabbitTemplate'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'rabbitTemplate' to allow for resolving potential circular references
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:21:27 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'messageConfirm'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'messageConfirm'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'messageConfirm' to allow for resolving potential circular references
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'messageConfirm'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'rabbitTemplate'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'rabbitTemplate'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'messageConfirm'
2022-03-31 14:21:27 org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:791)  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@302f7971]
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:21:27 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:96)  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:21:27 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:392)  Attempting to connect to: 192.168.58.133:5672
2022-03-31 14:21:27 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:400)  Created new connection: connectionFactory#74455848:0/SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:426)  Initializing declarations
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:21:27 org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:486)  Creating cached Rabbit Channel from PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@6f3c660a
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856] to map, size now 1
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitAdmin$$Lambda$92/0x0000000801326040 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitAdmin.declareExchanges(RabbitAdmin.java:507)  declaring Exchange 'spring_topic_exchange'
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitAdmin.declareQueues(RabbitAdmin.java:542)  declaring Queue 'test_spring_queue_1'
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitAdmin.declareBindings(RabbitAdmin.java:578)  Binding destination [test_spring_queue_1 (QUEUE)] to exchange [spring_topic_exchange] with routing key [msg.#]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:484)  Declarations finished
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@4c51cf28
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856] to map, size now 1
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:1:false
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10856]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:21:27 org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:989)  Closing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:21:25 CST 2022]; root of context hierarchy
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:21:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:21:27 org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:368)  Stopping beans in phase 0
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:2:false
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:9:true
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:21:27 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:510)  Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:21:27 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:566)  Retrieved dependent beans for bean 'connectionFactory': [org.springframework.amqp.rabbit.core.RabbitAdmin#0, rabbitTemplate]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:21:27 org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:246)  Invoking destroy() on bean with name 'connectionFactory'
2022-03-31 14:21:27 org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CachedChannelInvocationHandler.physicalClose(CachingConnectionFactory.java:1006)  Closing cached Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:21:27 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:21:27 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:22:04 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:22:04 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:22:04 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1442045361 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@146611050 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:22:04 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:589)  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:22:04 CST 2022]; root of context hierarchy
2022-03-31 14:22:04 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:22:04 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:22:04 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1518864111 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@1816757085 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:22:04 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:316)  Loading XML bean definitions from class path resource [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:22:05 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:74)  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2022-03-31 14:22:05 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)  Loading schema mappings from [META-INF/spring.schemas]
2022-03-31 14:22:05 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:153)  Loaded schema mappings: {http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd}
2022-03-31 14:22:05 org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:123)  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans.xsd
2022-03-31 14:22:05 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)  Loading bean definitions
2022-03-31 14:22:05 org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:163)  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler}
2022-03-31 14:22:05 org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:230)  Loaded 8 bean definitions from location pattern [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:22:05 org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:623)  Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:22:06 org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:740)  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7ec7ffd3]
2022-03-31 14:22:06 org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:764)  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16293aa2]
2022-03-31 14:22:06 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730)  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:22:06 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'connectionFactory'
2022-03-31 14:22:06 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'connectionFactory'
2022-03-31 14:22:06 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.getDefaultHostName(AbstractConnectionFactory.java:422)  Using hostname [WIN-N7GK09PTU6C] for hostname.
2022-03-31 14:22:06 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'connectionFactory' to allow for resolving potential circular references
2022-03-31 14:22:06 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'connectionFactory'
2022-03-31 14:22:06 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'connectionFactory'
2022-03-31 14:22:06 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:22:06 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:22:06 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.Queue#0' to allow for resolving potential circular references
2022-03-31 14:22:06 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:22:06 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:22:06 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:22:06 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:22:06 org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:503)  No property editor [org.springframework.amqp.rabbit.core.RabbitTemplateEditor] found for type org.springframework.amqp.rabbit.core.RabbitTemplate according to 'Editor' suffix convention
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0' to allow for resolving potential circular references
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:22:07 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0' to allow for resolving potential circular references
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:22:07 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.TopicExchange#0' to allow for resolving potential circular references
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:22:07 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'jsonMessageConverter'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'jsonMessageConverter' to allow for resolving potential circular references
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'jsonMessageConverter'
2022-03-31 14:22:07 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'rabbitTemplate'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'rabbitTemplate'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'rabbitTemplate' to allow for resolving potential circular references
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:22:07 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'messageConfirm'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'messageConfirm'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'messageConfirm' to allow for resolving potential circular references
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'messageConfirm'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'rabbitTemplate'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'rabbitTemplate'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'messageConfirm'
2022-03-31 14:22:07 org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:791)  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@302f7971]
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:22:07 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:96)  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:22:07 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:392)  Attempting to connect to: 192.168.58.133:5672
2022-03-31 14:22:07 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:400)  Created new connection: connectionFactory#74455848:0/SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:426)  Initializing declarations
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:22:07 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:22:07 org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:486)  Creating cached Rabbit Channel from PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@6f3c660a
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902] to map, size now 1
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitAdmin$$Lambda$92/0x0000000801326040 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitAdmin.declareExchanges(RabbitAdmin.java:507)  declaring Exchange 'spring_topic_exchange'
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitAdmin.declareQueues(RabbitAdmin.java:542)  declaring Queue 'test_spring_queue_1'
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitAdmin.declareBindings(RabbitAdmin.java:578)  Binding destination [test_spring_queue_1 (QUEUE)] to exchange [spring_topic_exchange] with routing key [msg.#]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:484)  Declarations finished
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@4c51cf28
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902] to map, size now 1
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:1:false
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:15:true
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:16:false
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:17:false
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:21:true
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:26:true
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:39:true
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:07 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:49:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:81:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:93:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:94:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:98:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:102:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:105:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:107:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:112:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:113:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:117:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:122:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:123:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:127:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:130:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:133:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:134:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:138:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:139:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:142:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:143:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:146:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:149:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:151:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:152:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:156:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:166:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:171:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:174:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:178:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:185:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:186:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:187:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:195:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:200:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:201:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:204:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:209:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:210:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:214:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:215:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:219:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:220:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:224:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:225:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:229:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:230:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:234:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:240:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:241:false
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:244:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:249:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:254:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:259:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:263:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:377:true
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:08 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10902]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:09 org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:989)  Closing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:22:04 CST 2022]; root of context hierarchy
2022-03-31 14:22:09 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:22:09 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:22:09 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:22:09 org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:368)  Stopping beans in phase 0
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:643:true
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:09 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:510)  Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:22:09 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:566)  Retrieved dependent beans for bean 'connectionFactory': [org.springframework.amqp.rabbit.core.RabbitAdmin#0, rabbitTemplate]
2022-03-31 14:22:09 org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:246)  Invoking destroy() on bean with name 'connectionFactory'
2022-03-31 14:22:09 org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CachedChannelInvocationHandler.physicalClose(CachingConnectionFactory.java:1006)  Closing cached Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):644
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):645
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):646
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):647
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):648
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):649
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):650
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):651
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):652
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):653
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):654
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):655
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):656
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):657
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):658
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):659
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):660
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):661
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):662
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):663
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):664
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):665
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):666
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):667
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):668
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):669
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):670
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):671
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):672
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):673
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):674
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):675
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):676
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):677
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):678
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):679
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):680
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):681
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):682
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):683
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):684
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):685
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):686
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):687
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):688
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):689
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):690
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):691
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):692
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):693
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):694
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):695
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):696
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):697
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):698
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):699
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):700
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):701
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):702
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):703
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):704
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):705
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):706
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):707
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):708
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):709
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):710
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):711
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):712
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):713
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):714
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):715
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):716
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):717
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):718
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):719
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):720
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):721
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):722
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):723
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):724
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):725
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):726
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):727
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):728
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):729
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):730
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):731
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):732
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):733
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):734
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):735
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):736
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):737
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):738
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):739
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):740
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):741
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):742
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):743
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):744
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):745
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):746
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):747
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):748
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):749
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):750
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):751
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):752
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):753
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):754
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):755
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):756
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):757
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):758
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):759
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):760
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):761
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):762
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):763
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):764
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):765
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):766
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):767
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):768
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):769
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):770
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):771
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):772
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):773
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):774
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):775
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):776
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):777
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):778
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):779
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):780
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):781
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):782
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):783
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):784
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):785
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):786
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):787
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):788
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):789
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):790
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):791
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):792
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):793
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):794
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):795
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):796
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):797
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):798
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):799
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):800
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):801
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):802
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):803
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):804
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):805
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):806
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):807
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):808
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):809
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):810
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):811
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):812
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):813
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):814
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):815
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):816
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):817
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):818
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):819
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):820
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):821
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):822
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):823
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):824
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):825
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):826
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):827
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):828
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):829
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):830
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):831
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):832
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):833
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):834
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):835
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):836
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):837
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):838
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):839
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):840
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):841
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):842
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):843
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):844
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):845
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):846
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):847
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):848
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):849
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):850
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):851
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):852
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):853
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):854
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):855
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):856
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):857
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):858
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):859
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):860
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):861
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):862
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):863
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):864
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):865
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):866
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):867
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):868
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):869
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):870
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):871
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):872
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):873
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):874
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):875
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):876
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):877
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):878
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):879
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):880
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):881
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):882
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):883
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):884
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):885
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):886
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):887
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):888
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):889
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):890
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):891
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):892
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):893
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):894
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):895
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):896
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):897
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):898
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):899
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):900
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):901
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):902
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):903
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):904
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):905
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):906
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):907
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):908
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):909
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):910
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):911
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):912
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):913
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):914
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):915
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):916
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):917
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):918
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):919
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):920
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):921
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):922
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):923
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):924
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):925
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):926
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):927
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):928
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):929
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):930
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):931
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):932
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):933
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):934
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):935
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):936
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):937
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):938
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):939
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):940
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):941
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):942
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):943
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):944
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):945
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):946
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):947
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):948
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):949
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):950
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):951
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):952
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):953
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):954
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):955
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):956
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):957
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):958
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):959
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):960
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):961
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):962
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):963
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):964
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):965
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):966
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):967
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):968
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):969
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):970
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):971
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):972
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):973
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):974
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):975
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):976
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):977
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):978
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):979
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):980
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):981
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):982
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):983
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):984
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):985
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):986
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):987
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):988
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):989
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):990
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):991
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):992
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):993
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):994
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):995
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):996
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):997
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):998
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):999
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:09 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:22:09 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:22:39 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:22:39 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:22:39 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1442045361 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@146611050 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:22:39 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:589)  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:22:39 CST 2022]; root of context hierarchy
2022-03-31 14:22:39 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:22:39 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:22:39 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1518864111 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@1816757085 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:22:39 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:316)  Loading XML bean definitions from class path resource [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:22:39 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:74)  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2022-03-31 14:22:39 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)  Loading schema mappings from [META-INF/spring.schemas]
2022-03-31 14:22:39 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:153)  Loaded schema mappings: {http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd}
2022-03-31 14:22:39 org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:123)  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans.xsd
2022-03-31 14:22:40 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)  Loading bean definitions
2022-03-31 14:22:40 org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:163)  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler}
2022-03-31 14:22:40 org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:230)  Loaded 8 bean definitions from location pattern [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:22:40 org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:623)  Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:22:40 org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:740)  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7ec7ffd3]
2022-03-31 14:22:40 org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:764)  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16293aa2]
2022-03-31 14:22:40 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730)  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:22:40 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'connectionFactory'
2022-03-31 14:22:40 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'connectionFactory'
2022-03-31 14:22:40 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.getDefaultHostName(AbstractConnectionFactory.java:422)  Using hostname [WIN-N7GK09PTU6C] for hostname.
2022-03-31 14:22:40 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'connectionFactory' to allow for resolving potential circular references
2022-03-31 14:22:40 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'connectionFactory'
2022-03-31 14:22:40 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'connectionFactory'
2022-03-31 14:22:40 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:22:40 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:22:40 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.Queue#0' to allow for resolving potential circular references
2022-03-31 14:22:40 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:22:40 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:22:40 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:22:40 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:22:40 org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:503)  No property editor [org.springframework.amqp.rabbit.core.RabbitTemplateEditor] found for type org.springframework.amqp.rabbit.core.RabbitTemplate according to 'Editor' suffix convention
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0' to allow for resolving potential circular references
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:22:41 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0' to allow for resolving potential circular references
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:22:41 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.TopicExchange#0' to allow for resolving potential circular references
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:22:41 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'jsonMessageConverter'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'jsonMessageConverter' to allow for resolving potential circular references
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'jsonMessageConverter'
2022-03-31 14:22:41 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'rabbitTemplate'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'rabbitTemplate'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'rabbitTemplate' to allow for resolving potential circular references
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:22:41 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'messageConfirm'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'messageConfirm'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'messageConfirm' to allow for resolving potential circular references
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'messageConfirm'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'rabbitTemplate'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'rabbitTemplate'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'messageConfirm'
2022-03-31 14:22:41 org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:791)  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@302f7971]
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:22:41 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:96)  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2022-03-31 14:22:41 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:22:41 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:392)  Attempting to connect to: 192.168.58.133:5672
2022-03-31 14:22:42 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:400)  Created new connection: connectionFactory#74455848:0/SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:426)  Initializing declarations
2022-03-31 14:22:42 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:22:42 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:22:42 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:22:42 org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:486)  Creating cached Rabbit Channel from PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@6f3c660a
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945] to map, size now 1
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitAdmin$$Lambda$92/0x0000000801326040 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitAdmin.declareExchanges(RabbitAdmin.java:507)  declaring Exchange 'spring_topic_exchange'
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitAdmin.declareQueues(RabbitAdmin.java:542)  declaring Queue 'test_spring_queue_1'
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitAdmin.declareBindings(RabbitAdmin.java:578)  Binding destination [test_spring_queue_1 (QUEUE)] to exchange [spring_topic_exchange] with routing key [msg.#]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:484)  Declarations finished
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@4c51cf28
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945] to map, size now 1
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:1:false
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:3:true
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:4:false
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:6:true
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:10:true
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:15:true
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:17:true
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:18:false
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:19:false
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 10945]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:22:42 org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:989)  Closing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:22:39 CST 2022]; root of context hierarchy
2022-03-31 14:22:42 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:22:42 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:22:42 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:22:42 org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:368)  Stopping beans in phase 0
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:20:false
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:22:42 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:510)  Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:22:42 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:566)  Retrieved dependent beans for bean 'connectionFactory': [org.springframework.amqp.rabbit.core.RabbitAdmin#0, rabbitTemplate]
2022-03-31 14:22:42 org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:246)  Invoking destroy() on bean with name 'connectionFactory'
2022-03-31 14:22:42 org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CachedChannelInvocationHandler.physicalClose(CachingConnectionFactory.java:1006)  Closing cached Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):21
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):22
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):23
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):24
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):25
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):26
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):27
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):28
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):29
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):30
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):31
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):32
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):33
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):34
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):35
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):36
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):37
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):38
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):39
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):40
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):41
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):42
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):43
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):44
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):45
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):46
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):47
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):48
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):49
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):50
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):51
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):52
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):53
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):54
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):55
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):56
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):57
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):58
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):59
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):60
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):61
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):62
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):63
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):64
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):65
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):66
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):67
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):68
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):69
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):70
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):71
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):72
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):73
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):74
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):75
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):76
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):77
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):78
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):79
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):80
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):81
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):82
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):83
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):84
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):85
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):86
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):87
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):88
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):89
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):90
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):91
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):92
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):93
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):94
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):95
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):96
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):97
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):98
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):99
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:22:42 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:22:42 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:34:59 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:34:59 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:34:59 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1442045361 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@146611050 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:34:59 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:589)  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:34:59 CST 2022]; root of context hierarchy
2022-03-31 14:34:59 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:34:59 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:34:59 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1518864111 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@1816757085 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:34:59 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:316)  Loading XML bean definitions from class path resource [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:34:59 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:74)  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2022-03-31 14:34:59 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)  Loading schema mappings from [META-INF/spring.schemas]
2022-03-31 14:34:59 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:153)  Loaded schema mappings: {http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd}
2022-03-31 14:34:59 org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:123)  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans.xsd
2022-03-31 14:35:00 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)  Loading bean definitions
2022-03-31 14:35:00 org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:163)  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler}
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:230)  Loaded 8 bean definitions from location pattern [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:35:00 org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:623)  Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:35:00 org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:740)  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7ec7ffd3]
2022-03-31 14:35:00 org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:764)  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16293aa2]
2022-03-31 14:35:00 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730)  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:35:00 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'connectionFactory'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'connectionFactory'
2022-03-31 14:35:00 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.getDefaultHostName(AbstractConnectionFactory.java:422)  Using hostname [WIN-N7GK09PTU6C] for hostname.
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'connectionFactory' to allow for resolving potential circular references
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'connectionFactory'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'connectionFactory'
2022-03-31 14:35:00 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.Queue#0' to allow for resolving potential circular references
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:35:00 org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:503)  No property editor [org.springframework.amqp.rabbit.core.RabbitTemplateEditor] found for type org.springframework.amqp.rabbit.core.RabbitTemplate according to 'Editor' suffix convention
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0' to allow for resolving potential circular references
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0' to allow for resolving potential circular references
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.TopicExchange#0' to allow for resolving potential circular references
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:35:00 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:35:00 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'jsonMessageConverter'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'jsonMessageConverter' to allow for resolving potential circular references
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'jsonMessageConverter'
2022-03-31 14:35:01 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'rabbitTemplate'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'rabbitTemplate'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'rabbitTemplate' to allow for resolving potential circular references
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:35:01 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'messageConfirm'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'messageConfirm'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'messageConfirm' to allow for resolving potential circular references
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'messageConfirm'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'rabbitTemplate'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'rabbitTemplate'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'messageConfirm'
2022-03-31 14:35:01 org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:791)  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@302f7971]
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:35:01 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:96)  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:35:01 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:392)  Attempting to connect to: 192.168.58.133:5672
2022-03-31 14:35:01 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:400)  Created new connection: connectionFactory#74455848:0/SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:426)  Initializing declarations
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:35:01 org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:486)  Creating cached Rabbit Channel from PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@6f3c660a
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522] to map, size now 1
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitAdmin$$Lambda$92/0x0000000801326040 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitAdmin.declareExchanges(RabbitAdmin.java:507)  declaring Exchange 'spring_topic_exchange'
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitAdmin.declareQueues(RabbitAdmin.java:542)  declaring Queue 'test_spring_queue_1'
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitAdmin.declareBindings(RabbitAdmin.java:578)  Binding destination [test_spring_queue_1 (QUEUE)] to exchange [spring_topic_exchange] with routing key [msg.#]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:484)  Declarations finished
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@4c51cf28
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522] to map, size now 1
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:1:false
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:854)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Ack:3:true
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11522]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:35:01 org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:989)  Closing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:34:59 CST 2022]; root of context hierarchy
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:35:01 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:35:01 org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:368)  Stopping beans in phase 0
2022-03-31 14:35:01 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:510)  Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:35:01 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:566)  Retrieved dependent beans for bean 'connectionFactory': [org.springframework.amqp.rabbit.core.RabbitAdmin#0, rabbitTemplate]
2022-03-31 14:35:01 org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:246)  Invoking destroy() on bean with name 'connectionFactory'
2022-03-31 14:35:01 org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CachedChannelInvocationHandler.physicalClose(CachingConnectionFactory.java:1006)  Closing cached Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):4
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):5
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):6
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):7
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):8
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):9
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:35:01 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:35:01 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:36:33 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:36:33 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:36:33 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1442045361 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@146611050 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:36:33 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:589)  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:36:33 CST 2022]; root of context hierarchy
2022-03-31 14:36:33 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 14:36:33 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 14:36:33 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1518864111 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@1816757085 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 14:36:33 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:316)  Loading XML bean definitions from class path resource [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:36:34 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:74)  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2022-03-31 14:36:34 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)  Loading schema mappings from [META-INF/spring.schemas]
2022-03-31 14:36:34 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:153)  Loaded schema mappings: {http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd}
2022-03-31 14:36:34 org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:123)  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans.xsd
2022-03-31 14:36:35 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)  Loading bean definitions
2022-03-31 14:36:35 org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:163)  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler}
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:230)  Loaded 8 bean definitions from location pattern [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 14:36:35 org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:623)  Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:36:35 org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:740)  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7ec7ffd3]
2022-03-31 14:36:35 org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:764)  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16293aa2]
2022-03-31 14:36:35 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730)  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:36:35 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'connectionFactory'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'connectionFactory'
2022-03-31 14:36:35 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.getDefaultHostName(AbstractConnectionFactory.java:422)  Using hostname [WIN-N7GK09PTU6C] for hostname.
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'connectionFactory' to allow for resolving potential circular references
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'connectionFactory'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'connectionFactory'
2022-03-31 14:36:35 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.Queue#0' to allow for resolving potential circular references
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:36:35 org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:503)  No property editor [org.springframework.amqp.rabbit.core.RabbitTemplateEditor] found for type org.springframework.amqp.rabbit.core.RabbitTemplate according to 'Editor' suffix convention
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0' to allow for resolving potential circular references
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0' to allow for resolving potential circular references
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.TopicExchange#0' to allow for resolving potential circular references
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:36:35 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:36:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'jsonMessageConverter'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'jsonMessageConverter' to allow for resolving potential circular references
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'jsonMessageConverter'
2022-03-31 14:36:36 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'rabbitTemplate'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'rabbitTemplate'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'rabbitTemplate' to allow for resolving potential circular references
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'jsonMessageConverter'
2022-03-31 14:36:36 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'messageConfirm'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'messageConfirm'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'messageConfirm' to allow for resolving potential circular references
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'messageConfirm'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'rabbitTemplate'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'rabbitTemplate'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'messageConfirm'
2022-03-31 14:36:36 org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:791)  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@302f7971]
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:36:36 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:96)  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:36:36 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:392)  Attempting to connect to: 192.168.58.133:5672
2022-03-31 14:36:36 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:400)  Created new connection: connectionFactory#74455848:0/SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:426)  Initializing declarations
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 14:36:36 org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:486)  Creating cached Rabbit Channel from PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@6f3c660a
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610] to map, size now 1
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitAdmin$$Lambda$92/0x0000000801326040 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitAdmin.declareExchanges(RabbitAdmin.java:507)  declaring Exchange 'spring_topic_exchange'
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitAdmin.declareQueues(RabbitAdmin.java:542)  declaring Queue 'test_spring_queue_1'
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitAdmin.declareBindings(RabbitAdmin.java:578)  Binding destination [test_spring_queue_1 (QUEUE)] to exchange [spring_topic_exchange] with routing key [msg.#]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:484)  Declarations finished
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@4c51cf28
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610] to map, size now 1
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://yze142@192.168.58.133:5672/, localPort= 11610]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 14:36:36 org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:989)  Closing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 14:36:33 CST 2022]; root of context hierarchy
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 14:36:36 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 14:36:36 org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:368)  Stopping beans in phase 0
2022-03-31 14:36:36 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:510)  Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 14:36:36 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:566)  Retrieved dependent beans for bean 'connectionFactory': [org.springframework.amqp.rabbit.core.RabbitAdmin#0, rabbitTemplate]
2022-03-31 14:36:36 org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:246)  Invoking destroy() on bean with name 'connectionFactory'
2022-03-31 14:36:36 org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CachedChannelInvocationHandler.physicalClose(CachingConnectionFactory.java:1006)  Closing cached Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1)
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):1
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):2
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):3
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):4
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):5
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):6
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):7
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):8
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) PC:Nack:(close):9
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 14:36:36 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://yze142@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 14:36:36 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 17:49:31 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 17:49:32 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 17:49:32 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1442045361 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@146611050 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 17:49:33 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:589)  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 17:49:33 CST 2022]; root of context hierarchy
2022-03-31 17:49:33 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 17:49:33 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 17:49:33 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1518864111 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@1816757085 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 17:49:33 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:316)  Loading XML bean definitions from class path resource [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 17:49:33 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:74)  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2022-03-31 17:49:33 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)  Loading schema mappings from [META-INF/spring.schemas]
2022-03-31 17:49:33 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:153)  Loaded schema mappings: {http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd}
2022-03-31 17:49:33 org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:123)  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans.xsd
2022-03-31 17:49:34 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)  Loading bean definitions
2022-03-31 17:49:34 org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:163)  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler}
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:230)  Loaded 8 bean definitions from location pattern [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 17:49:34 org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:623)  Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 17:49:34 org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:740)  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7ec7ffd3]
2022-03-31 17:49:34 org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:764)  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16293aa2]
2022-03-31 17:49:34 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730)  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 17:49:34 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'connectionFactory'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'connectionFactory'
2022-03-31 17:49:34 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.getDefaultHostName(AbstractConnectionFactory.java:422)  Using hostname [WIN-N7GK09PTU6C] for hostname.
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'connectionFactory' to allow for resolving potential circular references
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'connectionFactory'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'connectionFactory'
2022-03-31 17:49:34 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.Queue#0' to allow for resolving potential circular references
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 17:49:34 org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:503)  No property editor [org.springframework.amqp.rabbit.core.RabbitTemplateEditor] found for type org.springframework.amqp.rabbit.core.RabbitTemplate according to 'Editor' suffix convention
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0' to allow for resolving potential circular references
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0' to allow for resolving potential circular references
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.TopicExchange#0' to allow for resolving potential circular references
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 17:49:34 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'jsonMessageConverter'
2022-03-31 17:49:34 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'jsonMessageConverter'
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'jsonMessageConverter' to allow for resolving potential circular references
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'jsonMessageConverter'
2022-03-31 17:49:35 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'rabbitTemplate'
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'rabbitTemplate'
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'rabbitTemplate' to allow for resolving potential circular references
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'jsonMessageConverter'
2022-03-31 17:49:35 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'messageConfirm'
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'messageConfirm'
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'messageConfirm' to allow for resolving potential circular references
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'messageConfirm'
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'rabbitTemplate'
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'rabbitTemplate'
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'messageConfirm'
2022-03-31 17:49:35 org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:791)  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@302f7971]
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 17:49:35 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:96)  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2022-03-31 17:49:35 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 17:49:35 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:392)  Attempting to connect to: 192.168.58.133:5672
2022-03-31 17:49:35 com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)  An unexpected connection driver error occured (Exception message: Socket closed)
2022-03-31 17:50:55 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 17:50:55 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 17:50:55 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1442045361 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@146611050 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 17:50:56 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:589)  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 17:50:55 CST 2022]; root of context hierarchy
2022-03-31 17:50:56 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemProperties' with lowest search precedence
2022-03-31 17:50:56 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109)  Adding PropertySource 'systemEnvironment' with lowest search precedence
2022-03-31 17:50:56 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:125)  Initialized StandardEnvironment with PropertySources [MapPropertySource@1518864111 {name='systemProperties', properties={sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=G:\idea\spring-rabbitmq-prodycer\target\classes;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-rabbit\2.0.1.RELEASE\spring-rabbit-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\amqp\spring-amqp\2.0.1.RELEASE\spring-amqp-2.0.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\amqp-client\5.0.0\amqp-client-5.0.0.jar;C:\Users\Administrator\.m2\repository\com\rabbitmq\http-client\1.3.0.RELEASE\http-client-1.3.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.6\httpclient-4.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.3\httpcore-4.3.3.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.4\jackson-databind-2.8.4.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.4\jackson-core-2.8.4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-messaging\5.0.2.RELEASE\spring-messaging-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\retry\spring-retry\1.2.1.RELEASE\spring-retry-1.2.1.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=F:\java jvm\jmv 12\bin, sun.java.command=test.Sender, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=F:\java jvm\jmv 12, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=Administrator, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=G:\idea\xiaoyu-FastDFS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, java.library.path=F:\java jvm\jmv 12\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=12.0.2+10, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}}, SystemEnvironmentPropertySource@1816757085 {name='systemEnvironment', properties={USERDOMAIN_ROAMINGPROFILE=WIN-N7GK09PTU6C, PROCESSOR_LEVEL=6, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, BT_PANEL=D:\BtSoft\panel, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, MAVEN_HOME=F:\apache-maven-3.6.1, USERNAME=Administrator, ProgramFiles(x86)=C:\Program Files (x86), FPS_BROWSER_USER_PROFILE_STRING=Default, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, DriverData=C:\Windows\System32\Drivers\DriverData, PyCharm Community Edition=F:\Python\PyCharm Community Edition 2021.2\bin;, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, HOMEPATH=\Users\Administrator, MYSQL_HOME=F:\mysql-5.7.24-winx64, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 158 Stepping 9, GenuineIntel, ProgramFiles=C:\Program Files, PUBLIC=C:\Users\Public, windir=C:\Windows, =::=::\, LOCALAPPDATA=C:\Users\Administrator\AppData\Local, USERDOMAIN=WIN-N7GK09PTU6C, FPS_BROWSER_APP_PROFILE_STRING=Internet Explorer, LOGONSERVER=\\WIN-N7GK09PTU6C, JAVA_HOME=F:\java jvm\jmv 12, =G:=G:\, APPDATA=C:\Users\Administrator\AppData\Roaming, BT_SETUP=D:\BtSoft, CommonProgramFiles=C:\Program Files\Common Files, Path=F:\java jvm\jmv 12\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\微信web开发者工具\dll;C:\Pro;ram Files\python;C:\Program Files\python\Scripts;F:\BtSoft\panel\script;C:\Program Files\python;C:\Program Files\python\Scripts;D:\BtSoft\panel\script;E:\Git\cmd;D:\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Administrator\AppData\Local\Programs\Python\Python39\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;F:\Python\PyCharm Community Edition 2021.2\bin;;F:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Pandoc\;F:\mysql-5.7.24-winx64\bin;F:\apache-maven-3.6.1\bin;C:\Users\Administrator\AppData\Roaming\npm, BT_PYTHON=C:\Program Files\python, OS=Windows_NT, COMPUTERNAME=WIN-N7GK09PTU6C, UNRAR_LIB_PATH=C:\Program Files\python\Lib\site-packages\unrar\UnRAR.dll, PROCESSOR_REVISION=9e09, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\Windows\system32\cmd.exe, SystemRoot=C:\Windows, TEMP=C:\Users\ADMINI~1\AppData\Local\Temp, HOMEDRIVE=C:, USERPROFILE=C:\Users\Administrator, TMP=C:\Users\ADMINI~1\AppData\Local\Temp, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=4, IDEA_INITIAL_DIRECTORY=C:\Users\Administrator\Desktop}}]
2022-03-31 17:50:56 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:316)  Loading XML bean definitions from class path resource [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 17:50:56 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:74)  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2022-03-31 17:50:56 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)  Loading schema mappings from [META-INF/spring.schemas]
2022-03-31 17:50:56 org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:153)  Loaded schema mappings: {http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool.xsd}
2022-03-31 17:50:56 org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:123)  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans.xsd
2022-03-31 17:50:56 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)  Loading bean definitions
2022-03-31 17:50:56 org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:163)  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler}
2022-03-31 17:50:56 org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:230)  Loaded 8 bean definitions from location pattern [spring/spring-rabbitmq-prodycer.xml]
2022-03-31 17:50:56 org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:623)  Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 17:50:56 org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:740)  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7ec7ffd3]
2022-03-31 17:50:56 org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:764)  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16293aa2]
2022-03-31 17:50:56 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730)  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 17:50:56 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'connectionFactory'
2022-03-31 17:50:56 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'connectionFactory'
2022-03-31 17:50:56 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.getDefaultHostName(AbstractConnectionFactory.java:422)  Using hostname [WIN-N7GK09PTU6C] for hostname.
2022-03-31 17:50:56 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'connectionFactory' to allow for resolving potential circular references
2022-03-31 17:50:56 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'connectionFactory'
2022-03-31 17:50:56 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'connectionFactory'
2022-03-31 17:50:56 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 17:50:56 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 17:50:56 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.Queue#0' to allow for resolving potential circular references
2022-03-31 17:50:56 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 17:50:56 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 17:50:56 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 17:50:56 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 17:50:56 org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:503)  No property editor [org.springframework.amqp.rabbit.core.RabbitTemplateEditor] found for type org.springframework.amqp.rabbit.core.RabbitTemplate according to 'Editor' suffix convention
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0' to allow for resolving potential circular references
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.core.RabbitAdmin#0'
2022-03-31 17:50:57 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0' to allow for resolving potential circular references
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 17:50:57 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'org.springframework.amqp.core.TopicExchange#0' to allow for resolving potential circular references
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 17:50:57 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'jsonMessageConverter'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'jsonMessageConverter'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'jsonMessageConverter' to allow for resolving potential circular references
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'jsonMessageConverter'
2022-03-31 17:50:57 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'rabbitTemplate'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'rabbitTemplate'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'rabbitTemplate' to allow for resolving potential circular references
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'jsonMessageConverter'
2022-03-31 17:50:57 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:219)  Creating shared instance of singleton bean 'messageConfirm'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:467)  Creating instance of bean 'messageConfirm'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)  Eagerly caching bean 'messageConfirm' to allow for resolving potential circular references
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'messageConfirm'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1755)  Invoking afterPropertiesSet() on bean with name 'rabbitTemplate'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)  Finished creating instance of bean 'rabbitTemplate'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'messageConfirm'
2022-03-31 17:50:57 org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:791)  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@302f7971]
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 17:50:57 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:96)  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 17:50:57 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:392)  Attempting to connect to: 192.168.58.133:5672
2022-03-31 17:50:57 org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:400)  Created new connection: connectionFactory#74455848:0/SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760]
2022-03-31 17:50:57 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:426)  Initializing declarations
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.TopicExchange#0'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.core.Queue#0'
2022-03-31 17:50:57 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'org.springframework.amqp.rabbit.config.BindingFactoryBean#0'
2022-03-31 17:50:57 org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:486)  Creating cached Rabbit Channel from PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1)
2022-03-31 17:50:57 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@6f3c660a
2022-03-31 17:50:57 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760] to map, size now 1
2022-03-31 17:50:57 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitAdmin$$Lambda$92/0x0000000801326040 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760]
2022-03-31 17:50:57 org.springframework.amqp.rabbit.core.RabbitAdmin.declareExchanges(RabbitAdmin.java:507)  declaring Exchange 'spring_topic_exchange'
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitAdmin.declareQueues(RabbitAdmin.java:542)  declaring Queue 'test_spring_queue_1'
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitAdmin.declareBindings(RabbitAdmin.java:578)  Binding destination [test_spring_queue_1 (QUEUE)] to exchange [spring_topic_exchange] with routing key [msg.#]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:484)  Declarations finished
2022-03-31 17:50:58 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.addListener(PublisherCallbackChannelImpl.java:820)  Added listener org.springframework.amqp.rabbit.core.RabbitTemplate@4c51cf28
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.addListener(RabbitTemplate.java:2084)  Added publisher confirm channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760] to map, size now 1
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1800)  Executing callback RabbitTemplate$$Lambda$86/0x0000000801320c40 on RabbitMQ Channel: Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1), conn: Proxy@7f0d96f2 Shared Rabbit Connection: SimpleConnection@7ae42ce3 [delegate=amqp://xiaoyu@192.168.58.133:5672/, localPort= 5760]
2022-03-31 17:50:58 org.springframework.amqp.rabbit.core.RabbitTemplate.doSend(RabbitTemplate.java:1940)  Publishing message (Body:'{"name":"xiaoyu","age":"18"}' MessageProperties [headers={__ContentTypeId__=java.lang.Object, __KeyTypeId__=java.lang.Object, __TypeId__=java.util.HashMap}, contentType=application/json, contentEncoding=UTF-8, contentLength=28, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])on exchange [spring_topic_exchange], routingKey = [msg.xiaoyu]
2022-03-31 17:50:58 org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:989)  Closing org.springframework.context.support.ClassPathXmlApplicationContext@9f70c54: startup date [Thu Mar 31 17:50:55 CST 2022]; root of context hierarchy
2022-03-31 17:50:58 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'connectionFactory'
2022-03-31 17:50:58 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'rabbitTemplate'
2022-03-31 17:50:58 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255)  Returning cached instance of singleton bean 'lifecycleProcessor'
2022-03-31 17:50:58 org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:368)  Stopping beans in phase 0
2022-03-31 17:50:59 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:510)  Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ddced80: defining beans [connectionFactory,org.springframework.amqp.core.Queue#0,org.springframework.amqp.rabbit.core.RabbitAdmin#0,org.springframework.amqp.rabbit.config.BindingFactoryBean#0,org.springframework.amqp.core.TopicExchange#0,jsonMessageConverter,rabbitTemplate,messageConfirm]; root of factory hierarchy
2022-03-31 17:50:59 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:566)  Retrieved dependent beans for bean 'connectionFactory': [org.springframework.amqp.rabbit.core.RabbitAdmin#0, rabbitTemplate]
2022-03-31 17:50:59 org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:246)  Invoking destroy() on bean with name 'connectionFactory'
2022-03-31 17:50:59 org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CachedChannelInvocationHandler.physicalClose(CachingConnectionFactory.java:1006)  Closing cached Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1)
2022-03-31 17:51:00 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1) PC:Nack:(close):1
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1) PC:Nack:(close):2
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1) PC:Nack:(close):3
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1) PC:Nack:(close):4
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1) PC:Nack:(close):5
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1) PC:Nack:(close):6
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1) PC:Nack:(close):7
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1) PC:Nack:(close):8
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:781)  PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1) PC:Nack:(close):9
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.doHandleConfirm(PublisherCallbackChannelImpl.java:924)  Sending confirm PendingConfirm [correlationData=null cause=clean channel shutdown; protocol method: #method<channel.close>(reply-code=200, reply-text=OK, class-id=0, method-id=0)]
2022-03-31 17:51:00 org.springframework.amqp.rabbit.core.RabbitTemplate.revoke(RabbitTemplate.java:2160)  Removed publisher confirm channel: PublisherCallbackChannelImpl: AMQChannel(amqp://xiaoyu@192.168.58.133:5672/,1) from map, size now 0
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
2022-03-31 17:51:00 org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.generateNacksForPendingAcks(PublisherCallbackChannelImpl.java:788)  PendingConfirms cleared
